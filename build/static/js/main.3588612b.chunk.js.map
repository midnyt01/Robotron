{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/Errorboundry.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Errorboundry","state","hasError","error","info","this","setState","Component","App","onsearchChange","event","searchfield","target","value","fetch","response","json","filterbots","filter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCSCQ,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACA,sBAAKC,UAAY,2CAAjB,UACI,qBAAKC,IAAI,GAAGC,IAAG,+BAA2BH,KAC1C,sBAAKC,UAAU,KAAf,UACI,6BAAMH,IACN,4BAAKC,WCaFK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEKA,EAAOC,KAAI,SAACC,EAAMC,GACf,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHXS,SCKfC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,8BACI,uBACIT,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAQ,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACKJ,EAAMK,YCoBJC,E,kDAtBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAW,GAHA,E,qDAQnB,SAAmBC,EAAOC,GACtBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAI7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,0DAEJG,KAAKX,MAAMK,a,GAlBCQ,aCkDZC,G,wDA3CX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAdzC,EAAKZ,MAAM,CACPjB,OAAQ,GACR2B,YAAY,IAJN,E,qDAQd,WAAsB,IAAD,OACjBG,MAAM,8CACL5C,MAAK,SAAA6C,GAAQ,OAAIA,EAASC,UAC1B9C,MAAK,SAAAgB,GAAI,OACN,EAAKoB,SAAS,CAAEtB,OAAQE,S,oBAOhC,WAAU,IAAD,OACK+B,EAAaZ,KAAKJ,MAAMjB,OAAOkC,QAAO,SAAAlC,GACxC,OACIA,EAAOP,KAAK0C,cAAcC,SAAS,EAAKnB,MAAMU,YAAYQ,kBAG1E,OACA,sBAAKvC,UAAU,KAAf,UACC,oBAAIA,UAAW,KAAf,sBACA,cAAC,EAAD,CAAWS,aAAgBgB,KAAKI,iBAChC,cAAC,EAAD,UACG,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAWiC,e,GAhCfV,cCAlBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B1D,M","file":"static/js/main.3588612b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return(\r\n    <div className = 'bg-light-green dib pa3 ma2 shadow-5 grow'>\r\n        <img alt='' src={`https://robohash.org/${ id }`} />\r\n        <div className='tc'>\r\n            <h2>{ name }</h2>\r\n            <p>{ email }</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n           { \r\n             robots.map((user, i) => {\r\n                return (\r\n                    <Card \r\n                        key ={i}\r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email} \r\n                        />\r\n                    );\r\n                })\r\n            } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return(\r\n        <div>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style ={{ overflowY: 'scroll', border: '1px solid black', height: '565px' }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass Errorboundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidCatch( error, info ) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\n\r\nexport default Errorboundry;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../Components/CardList\";\r\n// import { robots } from \"./robots\"; }\r\nimport SearchBox from \"../Components/SearchBox\"\r\nimport Scroll from \"../Components/Scroll\"\r\nimport Errorboundry from \"../Components/Errorboundry\";\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(user => \r\n            this.setState({ robots: user}))}\r\n\r\n\r\n    onsearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n\r\n    }\r\n    render() {\r\n            const filterbots = this.state.robots.filter(robots => {\r\n                return (\r\n                    robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase()))\r\n            })\r\n\r\n    return(\r\n    <div className='tc'>\r\n     <h1 className= 'f1'>Robotron</h1>\r\n     <SearchBox searchChange ={ this.onsearchChange } />\r\n     <Scroll>\r\n        <Errorboundry>\r\n            <CardList robots = { filterbots }/>\r\n        </Errorboundry>\r\n    </Scroll>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\nimport App from './Containers/App'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}